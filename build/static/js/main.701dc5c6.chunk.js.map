{"version":3,"sources":["Firebase/firebase.ts","Reducers/User.Reducer.ts","Contexts/User.tsx","Components/Layout/HeaderLink.tsx","Components/Layout/Header.tsx","Components/Layout/R51Card.tsx","tests/lorem.js","Components/Home.tsx","Reducers/Events.Reducer.ts","Contexts/EventsProps.ts","Contexts/Events.tsx","Hooks/useEventTypes.ts","Components/Events/EventTypeButton.tsx","Components/Events/ColorKey.tsx","Components/Events/ToCreateEvent.tsx","Components/Events/Event.tsx","Components/Events/EventList.tsx","Components/Events.tsx","Components/Events/EventForm/Name.tsx","Components/Events/EventForm/Type.tsx","Components/Events/EventForm/Description.tsx","Components/Events/EventForm/Date.tsx","Components/Events/EventForm/Time.tsx","Components/Events/EventForm/Location.tsx","Components/Events/EventForm/Public.tsx","Components/Events/EventForm/Facilitation.tsx","Components/Events/EventForm/validationSchema.ts","Components/Events/EventForm.tsx","Components/Events/EventCreationFAQ.tsx","Components/CreateEvent.tsx","Hooks/usePrevious.ts","Components/Events/EventNotFound.tsx","Components/EditEvent.tsx","Components/Events/ConfirmRemoveEvent.tsx","Components/RemoveEvent.tsx","Components/Feedback/FeedbackFAQ.tsx","Components/Feedback/Website.tsx","Components/Feedback/Staff.tsx","Components/Feedback/Event.tsx","Components/Feedback/Other.tsx","Components/Feedback.tsx","Components/Login.tsx","Components/Auth/FirstLoginForm/ResidentName.tsx","Components/Auth/FirstLoginForm/ResidentHall.tsx","Components/Auth/FirstLoginForm/ResidentEmail.tsx","Components/Auth/FirstLoginForm/residentValidationSchema.ts","Components/Auth/FirstLoginForm.tsx","Components/FirstLogin.tsx","Components/Policy/PrivacyPolicy.tsx","Components/Policy/TermsOfService.tsx","Components/Profile.tsx","Components/Logout.tsx","Components/NotFound.tsx","Components/Routes.tsx","Components/Layout/Footer.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","usersCollection","collection","eventsCollection","currentEvents","where","Date","orderBy","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","ui","firebaseui","AuthUI","functions","requestVerification","httpsCallable","verifyUser","loggedOutUser","uid","displayName","email","userReducer","currentUser","action","console","log","type","data","Object","assign","signOut","UserContext","createContext","UserProvider","props","useReducer","UserReducer","user","userDispatch","useState","userQuery","setUserQuery","verificationRequests","setVerificationRequests","usersRequestingVerification","setUsersRequestingVerification","useEffect","onAuthStateChanged","authUser","doc","onSnapshot","snapshot","exists","hall","permissions","verified","unverifiedUsersQuery","undefined","docChanges","forEach","change","userRequesting","id","last","map","u","filter","Provider","value","children","HeaderLink","to","title","Nav","Link","as","Item","className","Header","useContext","Navbar","collapseOnSelect","expand","bg","variant","Container","fluid","Toggle","aria-controls","Collapse","R51Card","Card","Home","Body","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","gen","generateSentences","bind","document","Row","Col","md","lg","eventsReducer","events","eventsLast","event","add","set","delete","eventTypes","social","formal","color","meeting","community","meal","alumni","campus","halls","determineCFSEventType","publicStatus","EventsContext","EventsProvider","EventsReducer","dispatchToEvents","formatSubmittedEvent","date","time","CFSEvent","split","hour","minute","dateTime","toDate","formatSubmittedEventByHall","querySnapshot","query","size","toUpperCase","eventFormatted","moment","publicStatusCFS","length","formatRetrievedEvent","useEventTypes","setSocial","setMeal","setCommunity","setMeeting","setAlumni","EventTypeButton","typeState","picked","setPicked","typeData","Button","style","backgroundColor","border","margin","onClick","ColorKey","displayTypes","keys","key","ToCreateEvent","block","Event","name","format","location","description","Accordion","eventKey","borderLeft","xs","pathname","state","EventList","values","some","d","sort","e1","e2","Events","history","useHistory","update","sm","Alert","EventNameInput","form","touched","errors","field","Form","Group","controlId","Label","Control","required","maxLength","onChange","placeholder","Text","EventTypeInput","Check","custom","label","checked","EventDescriptionInput","rows","EventDateInput","setFieldValue","focused","onFocusChange","onDateChange","isOutsideRange","isInclusivelyBeforeDay","hideKeyboardShortcutsPanel","EventTimeInput","EventLocationInput","locs","otherEnabled","setOtherEnabled","otherText","setOtherText","otherIsChecked","Boolean","includes","otherEnabledNote","e","disabled","target","EventPublicInput","userHall","selected","setSelected","code","xl","toChange","v","orgs","EventFacilitationInput","facilitation","organizationType","organizationName","generateValidationSchema","yup","shape","oneOf","matches","when","is","then","of","orgType","updatedWarning","EventFormComponent","onSubmit","eventUpdated","formInitialValues","formValidationSchema","validationSchema","initialValues","handleSubmit","isSubmitting","noValidate","component","EventCreationFAQ","CreateEvent","eventToDispatch","push","usePrevious","ref","useRef","current","EditEventNotFound","EditEvent","useParams","eventToEdit","find","initialEvent","setEventUpdated","eventDidUpdate","isEqual","innerComponent","submittedEvent","EventNotFound","ConfirmRemoveEvent","handleConfirm","handleCancel","RemoveEvent","eventToRemove","FeedbackFAQ","WebsiteForm_Formik","withFormik","mapPropsToValues","subject","feedback","Yup","StaffForm","fbType","setFbType","setFeedback","preventDefault","EventForm","OtherForm","Feedback","Tab","defaultActiveKey","justify","Content","Pane","Website","Staff","Other","Login","replace","start","callbacks","signInSuccessWithAuthResult","authResult","additionalUserInfo","isNewUser","signInFlow","signInOptions","tosUrl","privacyPolicyUrl","ResidentName","ResidentHall","ResidentEmail","generateResidentValidationSchema","FirstLoginForm","requestErrorAlert","FirstLogin","requestError","setRequestError","initialName","request","a","async","getIdToken","kuEmail","requestedHall","PrivacyPolicy","fontFamily","padding","href","rel","TermsOfService","Profile","status","verifyLink","optionalLink","sideHeader","Logout","NotFound","Routes","path","exact","LogIn","LogOut","Footer","App","Jumbotron","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.701dc5c6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\n\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/functions';\n\nimport * as firebaseui from 'firebaseui';\n\n// Initialize Firebase with R51 Firebase configuration\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDwu3Mdl6FJBx9zxuZhwtGtSu7J-UZtwpY\",\n  authDomain: \"resident51-7df51.firebaseapp.com\",\n  databaseURL: \"https://resident51-7df51.firebaseio.com\",\n  projectId: \"resident51-7df51\",\n  storageBucket: \"resident51-7df51.appspot.com\",\n  messagingSenderId: \"627021015998\",\n  appId: \"1:627021015998:web:addfb2db732f443f\"\n});\n\n// Database objects\nexport const store = firebase.firestore();\nexport const usersCollection = store.collection('users');\nexport const eventsCollection = store.collection('events');\nexport const currentEvents = eventsCollection.where('dateTime', \">\", new Date()).orderBy('dateTime');\n\n// Authentication objects\nexport const auth = firebase.auth();\nexport const GoogleAuthProvider = firebase.auth.GoogleAuthProvider.PROVIDER_ID;\nexport const FacebookAuthProvider = firebase.auth.FacebookAuthProvider.PROVIDER_ID;\nexport const ui = new firebaseui.auth.AuthUI(auth);\n\n// Function objects\nexport const functions = firebase.functions();\nexport const requestVerification = functions.httpsCallable('requestVerification');\nexport const verifyUser = functions.httpsCallable('verifyUser');\n","import { auth } from '../Firebase/firebase';\n\nimport { UserInterface } from '../Types/';\n\nexport type User = null | UserInterface;\nexport type UserActionType = 'LOGGED_OUT' | 'LOGGED_IN'| 'USER_FOUND'| 'NEW_USER'| 'LOGOUT';\nexport type UserAction =\n  | { type: 'LOGGED_OUT' }\n  | { type: 'LOGGED_IN', data: firebase.User }\n  | { type: 'USER_FOUND', data: Pick<UserInterface, 'hall' | 'permissions' | 'verified'> }\n  | { type: 'NEW_USER' }\n  | { type: 'LOGOUT' };\n\nexport const loggedOutUser: UserInterface = {\n  uid: '',\n  displayName: null,\n  email: null,\n  // #TODO logged out user should have email: '', permissions: 0, etc.\n  // null should only be used for when we are waiting for data to be fetched.\n};\n\nconst userReducer = (currentUser: User, action: UserAction): User => {\n  console.log(action.type);\n  switch (action.type) {\n    case \"LOGGED_OUT\":\n      return loggedOutUser;\n    case \"LOGGED_IN\":\n      // Merge in Firebase auth user properties\n      return action.data;\n    case \"USER_FOUND\":\n      // #TODO this runs even when the user is updated, ie after requesting verification.\n      // We should separate each change to the user into separate actions.\n      return Object.assign(currentUser, action.data);\n    case \"NEW_USER\":\n      if(currentUser === null)\n        return loggedOutUser;\n      return currentUser;\n    case \"LOGOUT\":\n      auth.signOut();\n      if(currentUser === null)\n        return loggedOutUser;\n      return currentUser;\n    default:\n      if(currentUser === null)\n        return loggedOutUser;\n      return currentUser;\n  }\n};\n\nexport default userReducer;","import React, { useReducer, createContext, useEffect, useState } from 'react';\n\nimport { UserInterface } from '../Types/';\n\nimport { auth, usersCollection } from '../Firebase/firebase';\nimport UserReducer, { User, UserAction } from '../Reducers/User.Reducer';\n\ninterface UserContextProps {\n  user: User,\n  userDispatch: React.Dispatch<UserAction>,\n  usersRequestingVerification: UserInterface[],\n}\n\nexport const UserContext = createContext({} as UserContextProps);\n\ntype props = { children: React.ReactNode };\nexport const UserProvider = (props: props) => {\n  const [user, userDispatch] = useReducer(UserReducer, null);\n\n  // Reference to user's document in Cloud Firestore.\n  const [userQuery, setUserQuery] = useState<firebase.firestore.DocumentReference | null>(null);\n  const [verificationRequests, setVerificationRequests] = useState<firebase.firestore.Query | null>(null);\n  const [usersRequestingVerification, setUsersRequestingVerification] = useState<UserInterface[]>([]);\n\n  // Check for auth token on client, use to sign user in.\n  useEffect(() => auth.onAuthStateChanged((authUser) => {\n    // Note that the callback passed to auth.onAuthStateChanged will fire\n    // automatically  when a user logs in or logs out.\n    if (authUser) {\n      userDispatch({ type: \"LOGGED_IN\", data: authUser });\n      setUserQuery(usersCollection.doc(authUser.uid));\n    } else {\n      userDispatch({ type: \"LOGGED_OUT\" });\n      setUserQuery(null);\n      setVerificationRequests(null);\n      setUsersRequestingVerification([]);\n    }\n  }), []);\n\n  // When the Firestore user document is found, set extra permissions/info\n  // on the user context.\n  useEffect(() => !userQuery ? undefined : userQuery.onSnapshot(snapshot => {\n    if (snapshot.exists) {\n      const { hall, permissions, verified } = snapshot.data() as UserInterface;\n      userDispatch({ type: \"USER_FOUND\", data: { hall, permissions, verified } });\n\n      // Set reference query for users requesting verification - will only succeed if user is an admin.\n      // #TODO you know ..... this really should just be a cloud function.....\n      const unverifiedUsersQuery = usersCollection\n        .where('hall', '==', hall).where('permissions', '==', 0).where('verified', '==', false);\n      setVerificationRequests((verified && permissions && permissions >= 3) ? unverifiedUsersQuery : null);\n    } else {\n      setVerificationRequests(null);\n    }\n  }), [userQuery]);\n\n  // When the query for users requesting verification is set, we can try to send the query to Firebase.\n  // So long as the user isn't being nefarious, and so long as there are users requesting verification,\n  // we will get the list of users requesting verification from firebase.\n  useEffect(() => {\n    if (verificationRequests !== null) {\n      return verificationRequests.onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          const userRequesting = { ...change.doc.data(), uid: change.doc.id } as UserInterface;\n          if (change.type === 'added') {\n            setUsersRequestingVerification(last => [...last, userRequesting]);\n          } else if (change.type === 'modified') {\n            setUsersRequestingVerification(last => last.map(u => u.uid === change.doc.id ? userRequesting : u));\n          } else {\n            setUsersRequestingVerification(last => last.filter(u => u.uid !== change.doc.id));\n          }\n        });\n      });\n    }\n  }, [verificationRequests])\n\n  return (\n    <UserContext.Provider value={{ user, userDispatch, usersRequestingVerification }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\ntype props = { to: string, title ?: string, children ?: any}\nconst HeaderLink = ({ to, title, children }: props) => (\n  <Nav.Link as=\"span\">\n    <Nav.Item>\n      <Link className=\"header-link\" to={to}>{children || title}</Link>\n    </Nav.Item>\n  </Nav.Link>\n);\n\nexport default HeaderLink;\n","import React, { useContext } from \"react\";\n\nimport { UserContext } from '../../Contexts/User';\n\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport HeaderLink from \"./HeaderLink\";\n\nconst Header = () => {\n\n  const { user } = useContext(UserContext);\n\n  return (\n    <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n      <Container fluid className=\"my-auto\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <HeaderLink to=\"/\" title=\"Home\" />\n            <HeaderLink to=\"/events/\">Events</HeaderLink>\n            <HeaderLink to=\"/feedback\">Feedback</HeaderLink>\n          </Nav>\n          <Nav>\n            {(() => {\n              if(user === null) {\n                return <div />\n              } else if (user && user.uid) {\n                return <HeaderLink to=\"/profile/\">Profile</HeaderLink>\n              } else {\n                return <HeaderLink to=\"/login/\">Log In</HeaderLink>\n              }\n            })()}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\n\ntype cardProps = { children?: any }\nconst R51Card = (props: cardProps) => (\n  <Card className=\"mb-3\">\n    {props.children}\n  </Card>\n)\n\ntype homeProps = { title: string, children: any }\nR51Card.Home = (props: homeProps) => (\n  <Card className=\"mb-3\">\n    <Card.Header className=\"text-center\">\n      <h2>{props.title}</h2>\n    </Card.Header>\n    <Card.Body>{props.children}</Card.Body>\n  </Card>\n);\n\nR51Card.Header = Card.Header;\n\nR51Card.Body = Card.Body;\n\nexport default R51Card","import { LoremIpsum } from \"lorem-ipsum\";\nconst lorem = new LoremIpsum({\n  sentencesPerParagraph: {\n    max: 8,\n    min: 4\n  },\n  wordsPerSentence: {\n    max: 16,\n    min: 4\n  }\n});\n\nexport default lorem;","import React, { useEffect } from 'react';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport R51Card from \"./Layout/R51Card\";\n\n// Dev\nimport lorem from \"../tests/lorem\";\nconst gen = lorem.generateSentences.bind(lorem);\n\nconst Home = () => {\n  useEffect(() => {\n    document.title = \"Resident 51\";\n  });\n\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-md-center\">\n        <Col md={10} lg={6}>\n          <R51Card.Home title=\"Events\">{gen(11)}</R51Card.Home>\n          <R51Card.Home title=\"Resources\">{gen(7)}</R51Card.Home>\n        </Col>\n        <Col md={10} lg={6}>\n          <R51Card.Home title=\"Legacy\">{gen(12)}</R51Card.Home>\n          <R51Card.Home title=\"Feedback\">{gen(2)}</R51Card.Home>\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nexport default Home;","import { eventsCollection } from '../Firebase/firebase';\n\nimport { EventR51, EventId, EventToCFS } from '../Types/';\n\nexport type Event = EventR51;\nexport type Events = null | Event[];\nexport type EventActionType =\n  | 'EMPTY'\n  | 'ADDED'\n  | 'MODIFIED'\n  | 'REMOVED'\n  | 'ADD'\n  | 'MODIFY'\n  | 'REMOVE';\nexport type EventAction =\n  | { type: 'EMPTY' }\n  | { type: 'ADDED', event: Event }\n  | { type: 'MODIFIED', event: Event }\n  | { type: 'REMOVED', event: Event }\n  | { type: 'ADD', event: EventToCFS }\n  | { type: 'MODIFY', event: EventToCFS }\n  | { type: 'REMOVE', id: EventId };\n\nconst eventsReducer = (events: Events | null, action: EventAction): Events => {\n  const eventsLast = events || [];\n\n  switch (action.type) {\n    case \"EMPTY\":\n      return eventsLast;\n    case \"ADDED\":\n      return [...eventsLast, action.event];\n    case \"MODIFIED\":\n      return eventsLast.map(event => {\n        if (event.id === action.event.id)\n          return { ...action.event, id: action.event.id };\n        else\n          return event;\n      });\n    case \"REMOVED\":\n      return eventsLast.filter(event => event.id !== action.event.id);\n    case \"ADD\":\n      eventsCollection.add(action.event);\n      return eventsLast;\n    case \"MODIFY\":\n      eventsCollection.doc(action.event.id).set(action.event);\n      return eventsLast;\n    case \"REMOVE\":\n      eventsCollection.doc(action.id).delete();\n      return eventsLast;\n    default:\n      return eventsLast;\n  }\n};\n\nexport default eventsReducer;","import { Hall, CFSEvent, EventToCFS, EventR51, EventTypeFormats, EventFormValidated } from '../Types/';\nimport moment from 'moment';\n\nexport const eventTypes: EventTypeFormats = {\n  social: { formal: \"Social Event\", color: \"green\" },\n  meeting: { formal: \"Meeting\", color: \"orange\" },\n  community: { formal: \"Community Event\", color: \"plum\" },\n  meal: { formal: \"Co-Hall Meal\", color: \"lightcoral\" },\n  alumni: { formal: \"Alumni Event\", color: \"maroon\" },\n  campus: { formal: \"Campus Event\", color: \"lightseagreen\" }\n};\n\nexport const halls: Hall[] = [\n  \"Battenfeld\",\n  \"Douthart\",\n  \"Grace Pearson\",\n  \"KK Amini\",\n  \"Krehbiel\",\n  \"Margaret Amini\",\n  \"Miller\",\n  \"Pearson\",\n  \"Rieger\",\n  \"Sellards\",\n  \"Stephenson\",\n  \"Watkins\"\n];\n\nconst determineEventType = (publicStatusCFS: CFSEvent['publicStatus']): EventR51['publicStatus']['type'] => {\n  if (publicStatusCFS.type === 'private') {\n    return (publicStatusCFS.halls.length === 1) ? 'hall' : 'halls'\n  } else {\n    return 'public';\n  }\n}\n\n// Format event queried from Firebase\nexport const formatRetrievedEvent = (event: CFSEvent): EventR51 => ({\n  ...event,\n  dateTime: moment(event.dateTime.toDate()),\n  publicStatus: {\n    type: determineEventType(event.publicStatus),\n    halls: event.publicStatus.halls,\n  }\n});\n\nconst determineCFSEventType = (hall: Hall, publicStatus: EventR51['publicStatus']): CFSEvent['publicStatus'] => ({\n  type: publicStatus.type === 'public' ? 'public' : 'private',\n  halls: (publicStatus.type === 'public')\n            ? halls : publicStatus.type === 'hall'\n              ? [hall] : publicStatus.halls,\n});\n\n// Format event before sending to Firebase\nexport const formatSubmittedEventByHall = (hall: Hall) => (event: EventFormValidated): EventToCFS => {\n  // destructure date and time off of event\n  const { date, time, ...CFSEvent} = event;\n  const [hour, minute] = time.split(':');\n\n  return {\n    ...CFSEvent,\n    dateTime: date.hour(+hour).minute(+minute).toDate(),\n    publicStatus: determineCFSEventType(hall, event.publicStatus),\n  };\n}","import React, { useReducer, createContext, useContext, useEffect } from 'react';\n\nimport { CFSEvent, EventToCFS, EventFormValidated, Hall, EventTypeFormats } from '../Types/';\n\nimport { currentEvents } from '../Firebase/firebase';\nimport EventsReducer, { Events, EventAction } from '../Reducers/Events.Reducer';\nimport { UserContext } from './User';\nimport {\n  formatSubmittedEventByHall,\n  formatRetrievedEvent,\n  halls,\n  eventTypes\n} from './EventsProps';\n\ninterface EventContextProps {\n  events: Events,\n  dispatchToEvents: React.Dispatch<EventAction>,\n  formatSubmittedEvent: (event: EventFormValidated) => EventToCFS,\n  eventTypes: EventTypeFormats,\n  halls: Hall[],\n}\nexport const EventsContext = createContext({} as EventContextProps);\n\ntype props = { children: React.ReactNode };\n\nexport const EventsProvider = (props: props) => {\n  const [events, dispatchToEvents] = useReducer(EventsReducer, null);\n\n  const { user } = useContext(UserContext);\n\n  const hall = user && user.hall;\n  const formatSubmittedEvent = formatSubmittedEventByHall(hall || 'Miller'); // #TODO: this is fucking awful\n\n  /**\n   * Fetch events from Cloud Firestore based on User's permissions.\n   */\n  const querySnapshot = (query: firebase.firestore.Query) => query.onSnapshot(snapshot => {\n    if (!snapshot.size) return dispatchToEvents({ type: 'EMPTY' });\n\n    snapshot.docChanges().forEach(function (change) {\n      // Dispatch using the snapshot change type as the action type\n      // #TODO adding every event one by one the first time is easy but causes a lot\n      // of renders. Let's get all events at once.\n      // #TODO now that we have separate queries for public and private events,\n      // we need to have a condition for when an event changes from public to private\n      const type = (change.type.toUpperCase() as 'ADDED' | 'MODIFIED' | 'REMOVED');\n      const event = { ...change.doc.data(), id: change.doc.id } as CFSEvent;\n      const eventFormatted = formatRetrievedEvent(event);\n      dispatchToEvents({ type, event: eventFormatted });\n    });\n  });\n\n  // First, query for all public events.\n  useEffect(() => {\n    const query = currentEvents.where(\"publicStatus.type\", \"==\", 'public');\n    return querySnapshot(query);\n  }, []);\n\n  // Next, query for all private events available to the user.\n  useEffect(() => {\n    if(user && user.permissions) {\n      const query = currentEvents.where(\"publicStatus.type\", \"==\", \"private\");\n      if(user.permissions === 1) {\n        return querySnapshot(query.where(\"publicStatus.halls\", \"array-contains\", user.hall));\n      } else if (user.permissions > 1) {\n        return querySnapshot(query);\n      }\n    }\n  }, [user]);\n\n  return (\n    <EventsContext.Provider value={{\n      events, dispatchToEvents, formatSubmittedEvent, eventTypes, halls\n    }}>\n      {props.children}\n    </EventsContext.Provider>\n  )\n};\n","import { useState } from 'react';\n\n// import { EventType } from '../Types/'; // tried coercing type below to EventType...\n\nexport type Statuple = [boolean, (next: boolean) => void];\nexport interface EventTypeFilterState {\n  [type: string]: Statuple,\n}\n/**\n * State for storing the list of filtered/un-filtered event types\n */\nconst useEventTypes = () => {\n  const [social, setSocial] = useState(true);\n  const [meal, setMeal] = useState(true);\n  const [community, setCommunity] = useState(true);\n  const [meeting, setMeeting] = useState(true);\n  const [alumni, setAlumni] = useState(true);\n  const [campus, setCampus] = useState(true);\n\n  const displayTypes: EventTypeFilterState = {\n    social: [social, setSocial],\n    meal: [meal, setMeal],\n    community: [community, setCommunity],\n    meeting: [meeting, setMeeting],\n    alumni: [alumni, setAlumni],\n    campus: [campus, setCampus]\n  }\n\n  return displayTypes;\n}\n\nexport default useEventTypes;","import React from 'react';\nimport { EventTypeProperties } from '../../Types/';\n\nimport Button from 'react-bootstrap/Button';\n\ntype EventTypeButtonProps = {\n  typeState: [boolean, (k: boolean) => void],\n  typeData: EventTypeProperties,\n};\nconst EventTypeButton = (props: EventTypeButtonProps) => {\n  const { typeState: [picked, setPicked], typeData } = props;\n\n  return (\n    <Button\n      style={{\n        backgroundColor: picked ? typeData.color : \"white\",\n        color: picked ? \"white\" : typeData.color,\n        border: \"2px solid \" + (picked ? \"white\" : typeData.color),\n        margin: \"3px\"\n      }}\n      onClick={() => setPicked(!picked)}\n    >{typeData.formal}</Button>\n  );\n};\n\nexport default EventTypeButton;\n","import React, { useContext } from 'react';\n\nimport { EventType } from '../../Types/';\nimport { EventTypeFilterState } from '../../Hooks/useEventTypes';\n\nimport { EventsContext } from \"../../Contexts/Events\";\n\nimport R51Card from '../Layout/R51Card';\nimport EventTypeButton from './EventTypeButton';\n\ntype ColorKeyProps = { displayTypes: EventTypeFilterState };\nconst ColorKey = (props: ColorKeyProps) => {\n  const { displayTypes } = props;\n  const { eventTypes } = useContext(EventsContext);\n\n  return (\n    <R51Card>\n      <R51Card.Header>\n        View By Event Type\n      </R51Card.Header>\n      <R51Card.Body className=\"type-buttons px-1\">\n        {Object.keys(eventTypes)\n          .map(type =>\n            <EventTypeButton \n              key={type} \n              typeState={displayTypes[type]}\n              typeData={eventTypes[type as EventType]}\n            />\n          )\n        }\n      </R51Card.Body>\n    </R51Card>\n  )\n}\n\nexport default ColorKey;\n","import React from 'react';\n\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport R51Card from '../Layout/R51Card';\n\nconst ToCreateEvent = () => (\n  <R51Card>\n    <R51Card.Header>\n      Submit New Event\n    </R51Card.Header>\n    <R51Card.Body>\n      <Link className=\"create-new\" to=\"/events/create\">\n        <Button variant=\"success\" block>Create a New Event</Button>\n      </Link>\n    </R51Card.Body>\n  </R51Card>\n);\n\nexport default ToCreateEvent;","import React from 'react';\n\nimport { EventR51, EventFormat } from '../../Types/';\n\nimport moment from 'moment';\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport { Link } from \"react-router-dom\";\n\ntype props = { \n  event: EventR51,\n  format: EventFormat,\n}\nconst Event = (props: props) => {\n  const event = (props.event && props.event.name) \n                  ? props.event\n                  : { name: 'Event data error' } as EventR51;\n\n  const format = (props.format && props.format.color)\n                    ? props.format\n                    : { color: 'black', formal: 'Event formatting error' } as EventFormat;\n\n  const { id, name, location, description, dateTime } = event;\n\n  return (\n    <Card>\n      <Accordion.Toggle\n        as={Card.Header}\n        eventKey={id}\n        style={{ borderLeft: `10px solid ${format.color}` }}\n      >\n        <Row className=\"justify-content-between\">\n          <Col className=\"text-truncate\">\n            <strong>{name}</strong>\n          </Col>\n          <Col className=\"d-block\" md=\"auto\" xs={12}>\n            <i>{moment(dateTime).format(\"MMMM Do, YYYY\")}</i>\n          </Col>\n        </Row>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={id}>\n        <Card.Body>\n          <Row className=\"justify-content-between mb-sm-1 mb-0\">\n            <Col className=\"text-truncate\">\n              <h5>\n                <span className=\"d-sm-inline d-none\">Location: </span>\n                {location}\n              </h5>\n            </Col>\n            <Col xs=\"auto\" className=\"event-admin-config\">\n              <Link\n                to={{ pathname: `/events/edit/${id}`, state: { event } }}\n                style={{ color: \"slategray\" }}\n              >\n                Edit\n              </Link>\n              <span>  &middot;  </span>\n              <Link\n                to={{ pathname: `/events/edit/${id}`, state: { event } }}\n                style={{ color: \"red\" }}\n              >\n                Delete\n            </Link>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-between\">\n            <Col>\n              <h6 className=\"mb-0\">\n                <span className=\"d-sm-inline d-none\">Time: </span>\n                {moment(dateTime).format(\"h:mm A\")}</h6>\n            </Col>\n            <Col xs=\"auto\">\n              <h6 className=\"mb-0\">\n                <span className=\"d-sm-inline d-none\">Event Type: </span>\n                {format.formal}\n              </h6>\n            </Col>\n          </Row>\n          <hr />\n          <p>{description}</p>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  )\n};\n\nexport default Event;","import React, { useContext } from 'react';\nimport { Events } from '../../Reducers/Events.Reducer';\n\nimport { EventTypeFilterState } from '../../Hooks/useEventTypes';\n\nimport { EventsContext } from \"../../Contexts/Events\";\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Event from './Event';\n\ntype EventListProps = { events: Events, displayTypes?: EventTypeFilterState };\nconst EventList = (props: EventListProps) => {\n  const { events, displayTypes } = props;\n  const { eventTypes } = useContext(EventsContext);\n\n  if (events === null) {\n    return <h5><i>Loading events......</i></h5>\n  }\n\n  // Check if any types are being displayed and an event is of that type\n  const anyToShow = displayTypes\n                    ? Object.values(displayTypes).some(d => d[0]) &&\n                      events.some(event => displayTypes[event.type][0])\n                    : events.length;\n\n  return anyToShow ?\n    <Accordion className='mb-4' >\n      {events\n        .filter(event => displayTypes ? displayTypes[event.type][0] : true)\n        .sort((e1, e2) => e1.dateTime as any - (e2.dateTime as any))\n        .map(event =>\n          event &&\n          <Event\n            key={event.id}\n            event={event}\n            format={eventTypes[event.type]}\n          />)}\n    </Accordion> :\n    <h5>(No Events to Display)</h5>\n};\n\nexport default EventList;","import React, { useContext, useEffect } from 'react';\n\nimport { EventsContext } from \"../Contexts/Events\";\n\nimport useEventTypes from '../Hooks/useEventTypes';\n\nimport { useHistory } from 'react-router-dom';\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from 'react-bootstrap/Container';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport ColorKey from './Events/ColorKey';\nimport ToCreateEvent from './Events/ToCreateEvent';\nimport EventList from './Events/EventList';\n\nconst Events = () => {\n  useEffect(() => {\n    document.title = \"Events | Resident 51\";\n  });\n\n  const { events } = useContext(EventsContext);\n\n  // Show updates from history state API when events are mutated\n  const history = useHistory();\n  const update = history.location.state && history.location.state.update;\n\n  const displayTypes = useEventTypes();\n\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-md-end\">\n        <Col md={8}>\n          <h1 className=\"text-center mb-4\" >Schol-Hall Events</h1>          \n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center px-lg-4 px-md-2\">\n        <Col sm={12} md={4}>\n          <ColorKey displayTypes={displayTypes} />\n          <ToCreateEvent />\n        </Col>\n        <Col sm={12} md={8}>\n          {update && <Alert variant=\"success\">{update}</Alert> }\n          <EventList events={events} displayTypes={displayTypes} />\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nexport default Events;","import React, { Fragment } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from 'formik';\nimport { EventFormValues } from '../EventForm';\n\nconst EventNameInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n\n  return (\n    <Fragment>\n      <Form.Group controlId=\"eventName\">\n        <Form.Label>Event Name</Form.Label>\n        <Form.Control\n          name=\"name\"\n          required\n          maxLength={50}\n          onChange={field.onChange}\n          value={values.name}\n          type=\"text\"\n          placeholder=\"Enter event name\"\n        />\n        <Form.Text className=\"text-muted\">\n          Limit 50 Characters ({50 - (values.name ? values.name.length : 0)}{\" \"}\n          remaining)\n      </Form.Text>\n      </Form.Group>\n      {errors.name && touched.name && (\n        <Alert variant={\"danger\"}>{errors.name}</Alert>\n      )}\n    </Fragment>\n  )\n};\n\nexport default EventNameInput;\n","import React, { useContext, Fragment } from \"react\";\n\nimport { EventType } from '../../../Types/';\n\nimport { EventsContext } from \"../../../Contexts/Events\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from 'formik';\nimport { EventFormValues } from '../EventForm';\n\nconst EventTypeInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n  const { eventTypes } = useContext(EventsContext);\n\n  return (\n    <Fragment>\n      <Form.Group>\n        <Form.Label>What type of event is this?</Form.Label>\n        <Row>\n          {Object.keys(eventTypes)\n            .map((type) => {\n              const formal = eventTypes[type as EventType].formal;\n              return (\n                <Col key={type} sm={6} lg={4}>\n                  <Form.Check\n                    required\n                    custom\n                    type=\"radio\"\n                    label={formal}\n                    name=\"type\"\n                    id={`event-type-${type}`}\n                    onChange={field.onChange}\n                    value={type}\n                    checked={values.type === type}\n                  />\n                </Col>\n              );\n            })}\n        </Row>\n      </Form.Group>\n      {errors.type && touched.type && (\n        <Alert variant={\"danger\"}>{errors.type}</Alert>\n      )}\n    </Fragment>\n  );\n};\n\nexport default EventTypeInput;\n","import React, { Fragment } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from 'formik';\nimport { EventFormValues } from '../EventForm';\n\nconst EventDescriptionInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n\n  return (\n    <Fragment>\n      <Form.Group controlId=\"eventDescription\">\n        <Form.Label>Event Description:</Form.Label>\n        <Form.Control\n          name=\"description\"\n          maxLength={1000}\n          onChange={field.onChange}\n          value={values.description}\n          required\n          as=\"textarea\"\n          rows=\"5\"\n          placeholder=\"A few sentences should do the trick! What can attendees expect?\"\n        />\n      </Form.Group>\n      {errors.description && touched.description && (\n        <Alert variant={\"danger\"}>{errors.description}</Alert>\n      )}\n    </Fragment>\n  )\n};\n\nexport default EventDescriptionInput;\n","import React from \"react\";\n\nimport moment from \"moment\";\nimport \"react-dates/initialize\";\nimport { DayPickerSingleDateController, isInclusivelyBeforeDay } from \"react-dates\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport { FieldProps } from \"formik\";\n\nconst EventDateInput = (props: FieldProps) => {\n  const {\n    form: { setFieldValue, values, errors, touched },\n    field\n  } = props;\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>What day will this event take place?</Form.Label>\n        <DayPickerSingleDateController\n          date={values.date || null}\n          focused\n          onFocusChange={({ focused }) => { }}\n          onDateChange={value => setFieldValue(field.name, value)}\n          isOutsideRange={date => isInclusivelyBeforeDay(date, moment())}\n          hideKeyboardShortcutsPanel\n        />\n      </Form.Group>\n      {errors.date && touched.date && (\n        <Alert variant={\"danger\"}>{errors.date}</Alert>\n      )}\n    </>\n  )\n};\n\nexport default EventDateInput;\n","import React, { Fragment } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from \"formik\";\nimport { EventFormValues } from '../EventForm';\n\nconst EventTimeInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n\n  return (\n    <Fragment>\n      <Form.Group>\n        <Form.Label>What time will this event take place?</Form.Label>\n        <Form.Control\n          required\n          name=\"time\"\n          onChange={field.onChange}\n          value={values.time}\n          type=\"time\"\n        />\n      </Form.Group>\n      {errors.time && touched.time && (\n        <Alert variant={\"danger\"}>{errors.time}</Alert>\n      )}\n    </Fragment>\n  );\n};\n\nexport default EventTimeInput;\n","// import React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport React, { useState, useEffect, Fragment, useContext } from \"react\";\n\nimport { EventsContext } from \"../../../Contexts/Events\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from 'formik';\nimport { EventFormValues } from '../EventForm';\n\nconst EventLocationInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, errors, touched }, field } = props;\n  const { halls } = useContext(EventsContext);\n  const locs = [...halls, \"Crawford Building\", \"Complex-wide\"];\n\n  // `otherText` is its own variable because we want the input text\n  // to remain populated even if another option is clicked.\n  const [otherEnabled, setOtherEnabled] = useState(false);\n  const [otherText, setOtherText] = useState('');\n\n  // On first render, get initial location input and set first state\n  useEffect(() => {\n    const otherIsChecked = Boolean(values.location && !locs.includes(values.location));\n\n    setOtherEnabled(otherIsChecked);\n    setOtherText(otherIsChecked ? values.location : '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const otherEnabledNote = otherEnabled &&\n    <p className=\"mt-1 font-italic font-weight-light small\">\n      *Note: if your event is somewhere like \"Reiger dining room\" or \"Crawford fountain\",\n      it's better to use the options above. Provide details in your description instead!\n    </p>\n\n  return (\n    <Fragment>\n      <Form.Group>\n        <Form.Label>Where will this event be located?</Form.Label>\n        <Row>\n          {locs.map(hall => (\n            <Col key={hall} sm={6} lg={4}>\n              <Form.Check\n                required\n                custom\n                type=\"radio\"\n                label={hall}\n                name=\"location\"\n                id={`location-hall-${hall}`}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  field.onChange(e);\n                  setOtherEnabled(false);\n                }}\n                value={hall}\n                checked={!otherEnabled && values.location === hall}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row>\n          <Col sm={'auto'} className=\"mt-2 pr-2\">\n            <Form.Check\n              custom\n              type=\"radio\"\n              id=\"location-other\"\n              label=\"Other: \"\n              name=\"location\"\n              required\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                field.onChange(e);\n                setOtherEnabled(true);\n              }}\n              value={otherText /* field.onChange is passed otherText when selecting 'other' */ }\n              checked={otherEnabled}\n            />\n          </Col>\n          <Col className=\"pt-1\">\n            <Form.Control\n              required\n              disabled={!otherEnabled}\n              name=\"location\"\n              maxLength={50}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                field.onChange(e);\n                setOtherText(e.target.value);\n              }}\n              value={otherText}\n              type=\"text\"\n              placeholder={'Examples: \"Strong Hall\", \"Memorial Stadium\"'}\n            />\n          </Col>\n        </Row>\n        {otherEnabledNote}\n      </Form.Group>\n      {errors.location && touched.location && (\n        <Alert variant={\"danger\"}>{errors.location}</Alert>\n      )}\n    </Fragment>\n  );\n};\n\nexport default EventLocationInput;\n","import React, { useState, Fragment, useContext } from \"react\";\n\nimport { Hall } from '../../../Types/';\n\nimport { EventsContext } from \"../../../Contexts/Events\";\nimport { UserContext } from \"../../../Contexts/User\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from 'formik';\nimport { EventFormValues } from '../EventForm';\n\nconst EventPublicInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, errors, touched }, field } = props;\n  const { user } = useContext(UserContext);\n  const { halls } = useContext(EventsContext);\n  \n  const userHall = user && user.hall;\n  const [selected, setSelected] = useState(values.publicStatus.halls);\n\n  const types = [\n    [\"public\", \"Open to anyone\"],\n    [\"halls\", \"Multiple halls\"],\n    [\"hall\", \"My hall\"]\n  ];\n\n  return (\n    <Fragment>\n      <Form.Group>\n        <Form.Label>Who will be attending this event?</Form.Label>\n        <Row>\n          {types.map(([code, formal]) => (\n            <Col key={code} xs={6} xl={3}>\n              <Form.Check\n                custom\n                type=\"radio\"\n                label={formal}\n                name=\"publicStatus.type\"\n                id={`public-${code}`}\n                onChange={field.onChange}\n                value={code}\n                checked={values.publicStatus.type === code}\n                required\n              />\n            </Col>\n          ))}\n        </Row>\n      </Form.Group>\n      {values.publicStatus.type === \"halls\" && (\n        <Form.Group>\n          <Form.Label>Which halls?</Form.Label>\n          <Row>\n            {halls.map(hall => (\n              <Col key={hall} sm={6} md={4}>\n                <Form.Check\n                  custom\n                  label={hall}\n                  name=\"publicStatus.halls\"\n                  id={`public-select-hall-${hall}`}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    // If this hall is already in selected, remove it, else add it.\n                    const toChange: Hall[] = selected.includes(hall)\n                      ? selected.filter(v => v !== hall)\n                      : [...selected, e.target.value as Hall];\n\n                    field.onChange(e);\n                    setSelected(toChange);\n                  }}\n                  value={hall}\n                  disabled={userHall === hall}\n                  checked={userHall === hall || selected.includes(hall)}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Form.Group>\n      )}\n\n      { errors.publicStatus && errors.publicStatus.type &&\n        touched.publicStatus && touched.publicStatus.type && (\n        <Alert variant={\"danger\"}>{errors.publicStatus.type}</Alert>\n      )}\n      { errors.publicStatus && errors.publicStatus.halls &&\n        touched.publicStatus && touched.publicStatus.halls && (\n        <Alert variant={\"danger\"}>{errors.publicStatus.halls}</Alert>\n      )}\n    </Fragment>\n  );\n};\n\nexport default EventPublicInput;\n","import React from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FieldProps } from 'formik';\nimport { EventFormValues } from '../EventForm';\n\nconst orgs = [\n  [\"hall\", \"My Hall\"],\n  [\"ASHC\", \"ASHC\"],\n  [\"staff\", \"Hall Staff\"],\n  [\"committee\", \"Schol-Hall Committee\"],\n  [\"campus\", \"The University\"],\n  [\"other\", \"Another Organization\"]\n];\n\nconst EventFacilitationInput = (props: FieldProps<EventFormValues>) => {\n  const { form: { values, errors, touched }, field } = props;\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>Who will be organizing this event?</Form.Label>\n        <Row>\n          {orgs.map(([code, formal]) => (\n            <Col key={code} xs={6} xl={4}>\n              <Form.Check\n                custom\n                type=\"radio\"\n                label={formal}\n                name=\"facilitation.organizationType\"\n                id={`facilitation-organizationType-${code}`}\n                onChange={field.onChange}\n                value={code}\n                checked={values.facilitation.organizationType === code}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Form.Group>\n      {(values.facilitation.organizationType === \"other\" ||\n        values.facilitation.organizationType === \"committee\") && (\n        <Form.Group>\n          <Form.Label>\n            {values.facilitation.organizationType === \"committee\"\n              ? \"Which committee?\"\n              : \"What organization?\"}\n          </Form.Label>\n          <Row>\n            <Col xs={10}>\n              <Form.Control\n                name=\"facilitation.organizationName\"\n                maxLength={50}\n                onChange={field.onChange}\n                value={values.facilitation.organizationName}\n                type=\"text\"\n                placeholder={values.facilitation.organizationType === \"committee\" ?\n                'Examples: \"Environmental Committee\", \"Community Service Committee\"' :\n                'Examples: \"Alumni Association\", \"KJHK\"'}\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n      )}\n\n      { errors.facilitation && errors.facilitation.organizationType && \n        touched.facilitation && touched.facilitation.organizationType && (\n        <Alert variant={\"danger\"}>{errors.facilitation.organizationType}</Alert>\n      )}\n      { errors.facilitation && errors.facilitation.organizationName && \n        touched.facilitation && touched.facilitation.organizationName && (\n        <Alert variant={\"danger\"}>{errors.facilitation.organizationName}</Alert>\n      )}\n    </>\n  );\n};\n\nexport default EventFacilitationInput;\n","import * as yup from 'yup';\nimport { EventTypeFormats, Hall } from '../../../Types/';\n\nimport moment from 'moment';\n\nconst generateValidationSchema = (\n  { halls, eventTypes }: { halls: Hall[], eventTypes: EventTypeFormats }\n) => yup.object().shape(\n{\n  name: yup.string()\n    .min(5, \"Provide a more descriptive name!\")\n    .max(50, \"Whoa whoa whoa, calm down bud, we said 50 characters or less!\")\n    .required(\"Please provide the name of the event.\"),\n  type: yup.string()\n    .oneOf(Object.keys(eventTypes), \"Please choose one of the provided event types.\")\n    .required(\"Please provide the type of event.\"),\n  description: yup.string()\n    .min(20, \"Provide some more information! What do attendees need to know?\")\n    .max(1000, \"Keep it under 1000 characters - no need to write the next KU Common Book.\")\n    .required(\"Please provide a description.\"),\n  date: yup.date()\n    .required(\"Please provide the day the event takes place.\")\n    .min(moment().hour(0).minute(1).toDate(), \"Please provide the day the event takes place.\"),\n  time: yup.string()\n    .required(\"Please provide the time the event will take place.\")\n    .matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Literally what are you doing.\"),\n  location: yup.string()\n    .min(2, \"Location is required! How will people find your event?\")\n    .max(80, \"Maximum of 80 characters.\")\n    .required(\"Location is required! How will people find your event?\"),\n  publicStatus: yup.object()\n    .shape({\n      type: yup.string()\n        .oneOf([\"public\", \"halls\", \"hall\"], \"Please indicate who should attend this event.\"),\n      halls: yup.mixed()\n        .when(\"type\", {\n          is: \"halls\",\n          then: yup.array()\n            .min(2, 'You must choose at least two halls, one being your own.')\n            .of(yup.string().oneOf(halls, \"Choose from the options provided\"))\n        }),\n    }),\n  facilitation: yup.object().shape({\n    organizationType: yup.string()\n      .oneOf([\"hall\", \"ASHC\", \"staff\", \"committee\", \"campus\", \"other\"], \"Choose from the options provided\")\n      .required(\"What organization is facilitating this event?\"),\n    organizationName: yup.string()\n      .when(\"organizationType\", {\n        is: orgType => [\"committee\", \"other\"].includes(orgType),\n        then: yup.string()\n          .min(3, \"What committee will put on this event?\")\n          .max(50, \"Max 50 charactars\")\n          .required(\"What committee will put on this event?\"),\n      }),\n  }),\n});\n\nexport default generateValidationSchema;","import React, { useContext } from \"react\";\n\nimport { EventR51, EventForm, EventFormValidated, Hall } from '../../Types/';\n\nimport { EventsContext } from \"../../Contexts/Events\";\nimport { UserContext } from \"../../Contexts/User\";\n\nimport moment, { Moment } from \"moment\";\nimport { Formik, Field, FastField } from \"formik\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport EventNameInput from \"./EventForm/Name\";\nimport EventTypeInput from \"./EventForm/Type\";\nimport EventDescriptionInput from \"./EventForm/Description\";\nimport EventDateInput from \"./EventForm/Date\";\nimport EventTimeInput from \"./EventForm/Time\";\nimport EventLocationInput from \"./EventForm/Location\";\nimport EventPublicInput from \"./EventForm/Public\";\nimport EventFacilitationInput from \"./EventForm/Facilitation\";\n\nimport validationSchema from \"./EventForm/validationSchema\";\n\nconst updatedWarning = (\n  <Alert variant=\"warning\"> Someone else just updated this event. If you submit now, those\n    changes would be overwritten. Please save your changes and refresh the page.</Alert>\n);\n\nexport type EventFormValues = {\n  name: string,\n  type: string,\n  description: string,\n  location: string,\n  date: Moment,\n  time: string,\n  publicStatus: {\n    type: string,\n    halls: Hall[],\n  },\n  facilitation: {\n    organizationType: string,\n    organizationName: string,\n  },\n};\n\ntype EventFormProps = {\n  event?: EventR51,\n  onSubmit: (event: EventFormValidated) => void,\n  eventUpdated?: boolean\n};\nconst EventFormComponent = (props: EventFormProps) => {\n  const { event = ({} as EventR51), onSubmit, eventUpdated = false } = props;\n  const { eventTypes, halls } = useContext(EventsContext);\n  const { user } = useContext(UserContext);\n\n  const formInitialValues: EventForm = {\n    id: event.id || '',\n    name: event.name || \"\",\n    type: event.type || \"\",\n    description: event.description || \"\",\n    location: event.location || \"\",\n    date: moment(event.dateTime) || null,\n    time: event.dateTime ? moment(event.dateTime).format(\"kk:mm\") : \"18:00\", // 6:00 PM\n    publicStatus: event.publicStatus || {\n      type: \"public\",\n      // TODO: enforce user exists\n      halls: user ? [user.hall] : [],\n    },\n    facilitation: event.facilitation || {\n      organizationType: \"\",\n      organizationName: \"\",\n    },\n  };\n\n  const formValidationSchema = user ? validationSchema({ halls, eventTypes }) : {};\n\n  return (\n    <Formik\n      initialValues={formInitialValues}\n      onSubmit={onSubmit}\n      validationSchema={formValidationSchema}\n    >\n      {({ handleSubmit, isSubmitting }) => {\n\n        return (\n          <Form noValidate onSubmit={handleSubmit}>\n\n            {eventUpdated && updatedWarning}\n\n            <h3>1. Name the event</h3>\n            <FastField name=\"name\" component={EventNameInput} />\n\n            <hr />\n            <h3>2. Describe the event</h3>\n            <FastField name=\"type\" component={EventTypeInput} />\n            <FastField name=\"description\" component={EventDescriptionInput} />\n\n            <hr />\n            <h3>3. Choose a time</h3>\n            <Row>\n              <Col xs={12} xl={6}>\n                <FastField name=\"date\" component={EventDateInput} />\n              </Col>\n              <Col xs={12} sm={10} md={8} xl={6}>\n                <FastField name=\"time\" component={EventTimeInput} />\n              </Col>\n            </Row>\n\n            <hr />\n            <h3>4. Choose a location</h3>\n            <FastField name=\"location\" component={EventLocationInput} />\n\n            <hr />\n            <h3>5. Choose attendees</h3>\n            <FastField name=\"publicStatus\" component={EventPublicInput} />\n\n            <hr />\n            <h3>6. Extra Info</h3>\n            <Field name=\"faciliation\" component={EventFacilitationInput} />\n\n            {eventUpdated && updatedWarning}\n\n            <Row className=\"mt-5\">\n              <Col xl={3} lg={3} md={4} sm={4} className=\"mb-3 pr-sm-0\">\n                <Button block variant=\"secondary\" size=\"lg\" type=\"button\" disabled={isSubmitting}>\n                  Save draft\n                </Button>\n              </Col>\n              <Col className=\"mb-3\">\n                <Button block variant=\"primary\" size=\"lg\" type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )\n      }}\n    </Formik>\n  );\n};\n\nexport default EventFormComponent;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card';\n\nconst EventCreationFAQ = () => (\n  <Card>\n    <Card.Body>\n      <Card.Text>\n        <strong>What happens when I submit an event?</strong> Once\n        you've filled out the event creation form, the submission is\n        shared with a resident on an executive board pertinent to the\n        event, such as a hall president, social chair, etc., who can\n        approve the event.\n      </Card.Text>\n      <Card.Text>\n        <strong>How can I make sure the event is approved?</strong> Be\n        sure to discuss your event with with an exec member, BEFORE\n        submitting your proposal. Additionally, make sure all necessary\n        fields are filled out so that other residents are properly\n        informed when viewing it on the website.\n      </Card.Text>\n      <Card.Text>\n        <strong>Who should be informed of the event before I submit it?\n        </strong> It depends on the event. If you the event involves\n        multiple halls, talk to members of those halls. If the event\n        requires funding, talk to your treasurer. If the event involves\n        food, like a co-hall meal, talk to your FBM. In general, always\n        inform your president and social chair first.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n)\n\nexport default EventCreationFAQ;","import React, { useContext, useEffect } from \"react\";\n\nimport { EventFormValidated } from '../Types/';\n\nimport { EventsContext } from \"../Contexts/Events\";\n\nimport { useHistory } from 'react-router-dom';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport EventForm from \"./Events/EventForm\";\nimport EventCreationFAQ from \"./Events/EventCreationFAQ\";\n\nconst CreateEvent = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"CreateEvent | Resident 51\";\n  });\n\n  const { dispatchToEvents, formatSubmittedEvent } = useContext(EventsContext);\n\n  const onSubmit = (event: EventFormValidated) => {\n    const eventToDispatch = formatSubmittedEvent(event);\n    dispatchToEvents({ type: \"ADD\", event: eventToDispatch });\n    history.push(\"/events\", { update: 'Event created!'});\n  };\n\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-md-center\">\n        <Col sm={12} md={4}>\n          <EventCreationFAQ />\n        </Col>\n        <Col sm={12} md={7}>\n          <h1>Create New Event</h1>\n          <hr />\n          <EventForm onSubmit={onSubmit} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CreateEvent;\n","import { useRef, useEffect } from 'react';\n\nfunction usePrevious<Type>(value: Type) {\n  const ref = useRef<Type>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default usePrevious;","import React, { Fragment } from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\n\nconst EditEventNotFound = () => (\n  <Fragment>\n    <Alert variant=\"danger\">Event not found...</Alert>\n    <Link to=\"/events\">\n      <Button variant=\"success\" block>Events Page</Button>\n    </Link>\n  </Fragment>\n);\n\nexport default EditEventNotFound;","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { EventsContext } from \"../Contexts/Events\";\nimport usePrevious from '../Hooks/usePrevious';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport isEqual from 'lodash/isEqual';\n// import get from 'lodash/get';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport EventForm from \"./Events/EventForm\";\nimport EventCreationFAQ from \"./Events/EventCreationFAQ\";\nimport EventNotFound from './Events/EventNotFound';\nimport { EventFormValidated } from \"../Types/\";\n\nconst EditEvent = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"Edit Event | Resident 51\";\n  });\n  \n  const { events, dispatchToEvents, formatSubmittedEvent } = useContext(EventsContext);\n  \n  const { id } = useParams();\n  const eventToEdit = (events || []).find(e => '' + e.id === '' + id);\n\n  // Inform the user if someone else just updated the same event.\n  const initialEvent = usePrevious(eventToEdit);\n  const [eventUpdated, setEventUpdated] = useState(false);\n  useEffect(() => {\n    // If eventToEdit has changed, and it is not equal to its last value, someone updated it\n    const eventDidUpdate = !!(initialEvent && !isEqual(eventToEdit, initialEvent));\n    setEventUpdated(eventDidUpdate); // true || false\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventToEdit, events]);\n\n  const onSubmit = (submittedEvent: EventFormValidated) => {\n    submittedEvent.id = id as string;\n    const eventToDispatch = formatSubmittedEvent(submittedEvent);\n    dispatchToEvents({ type: 'MODIFY', event: eventToDispatch });\n    history.push(\"/events\", { update: 'Event updated!' });\n  }\n\n  // Cases: 1) Waiting for firebase, 2) the event was found, 3) invalid event location\n  const innerComponent = (events === null)\n    ? <h1>Loading event...</h1>\n    : ( eventToEdit ? <EventForm event={eventToEdit}\n                                 onSubmit={onSubmit}\n                                 eventUpdated={eventUpdated} />\n                    : <EventNotFound /> );\n\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-md-center\">\n        <Col sm={12} md={4}>\n          <EventCreationFAQ />\n        </Col>\n        <Col sm={12} md={7}>\n          <h1>Edit This Event</h1>\n          <hr />\n          {eventUpdated}\n          {innerComponent}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EditEvent;\n","import React, { Fragment } from 'react';\n\nimport { EventR51 } from '../../Types/';\n\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport EventList from './EventList';\n\ntype ConfirmRemoveEventProps = {\n  handleConfirm: () => void,\n  handleCancel: () => void,\n  event: EventR51,\n};\nconst ConfirmRemoveEvent = (props: ConfirmRemoveEventProps) => {\n  const { handleConfirm, handleCancel, event } = props;\n  return (\n    <Fragment>\n      <h1>Delete this event?</h1>\n      <EventList events={[event]} />\n      <Row className=\"justify-content-end\">\n        <Col xs md=\"auto\" className=\"ml-auto\">\n          <Button size=\"lg\" onClick={handleCancel} variant=\"secondary\">Cancel</Button>\n        </Col>\n        <Col md=\"auto\" className=\"ml-0\">\n          <Button size=\"lg\" onClick={handleConfirm} variant=\"danger\">Delete Event</Button>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n};\n\nexport default ConfirmRemoveEvent;","import React, { useContext, useEffect } from \"react\";\n\nimport { EventsContext } from \"../Contexts/Events\";\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport EventCreationFAQ from \"./Events/EventCreationFAQ\";\nimport EditEventNotFound from './Events/EventNotFound';\nimport ConfirmRemoveEvent from './Events/ConfirmRemoveEvent';\n\nconst RemoveEvent = () => {\n  useEffect(() => {\n    document.title = \"Remove Event | Resident 51\";\n  });\n\n  const history = useHistory();\n\n  const { events, dispatchToEvents } = useContext(EventsContext);\n\n  const { id = '' } = useParams();\n  const eventToRemove = (events || []).find(e => '' + e.id === '' + id);\n\n  const handleConfirm = () => {\n    dispatchToEvents({ type: 'REMOVE', id });\n    history.push(\"/events\", { update: 'Event removed.' });\n  }\n\n  const handleCancel = () => {\n    history.push(\"/events\");\n  }\n\n  const innerComponent = (events === null)\n  ? <h1>Loading event...</h1>\n  : eventToRemove ? <ConfirmRemoveEvent handleConfirm={handleConfirm}\n                                        handleCancel={handleCancel}\n                                        event={eventToRemove}/>\n                  : <EditEventNotFound /> ;\n\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-md-center\">\n        <Col sm={12} md={4}>\n          <EventCreationFAQ />\n        </Col>\n        <Col sm={12} md={7}>\n          {innerComponent}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RemoveEvent;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nconst FeedbackFAQ = () => (\n  <Card>\n    <Card.Body>\n      <Card.Text>\n        <strong>What is this section for?</strong> This area is where you can\n        submit information, ideas, concerns and questions about your Schol Hall\n        and the complex in general.\n      </Card.Text>\n      <Card.Text>\n        <strong>Who views each submission?</strong> Feedback is made available\n        to different community leaders depending on your hall and the feedback\n        category. Note, however, that all students lead busy lives and there is\n        no guarantee they will check it.\n      </Card.Text>\n      <Card.Text>\n        <strong>How can I make useful submissions?</strong> Be constructive!\n        What systemic problem led you to this page? What information can you\n        share to realistically improve the community?\n      </Card.Text>\n      <Card.Text>\n        <strong>I sent something but nothing has changed!</strong> The most\n        effective way to communicate is speaking directly with members and\n        leaders of your community. If you want to make something happen, you\n        don't have to be the hall president! Talk to a friend, schedule\n        something with your social chair, be proactive!\n      </Card.Text>\n      <Card.Text>\n        <strong>I can't submit feedback! What's wrong?</strong> Some feedback\n        options require you to be logged in and verified with a hall. This\n        measure is to discourage unhelpful or toxic feedback. This isn't an\n        internet forum, it's your community. As long as you remain constructive,\n        your feedback will remain as anonymous as you wish it to be.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n);\n\nexport default FeedbackFAQ;\n","import React from 'react';\n\nimport { withFormik, Form, Field, FormikValues, FormikErrors, FormikTouched } from \"formik\";\nimport * as Yup from 'yup';\n\ntype props = { values: FormikValues, errors: FormikErrors<FormikValues>, touched: FormikTouched<FormikValues> };\nconst WebsiteForm = (props: props) => {\n  const { errors, touched } = props;\n  return (\n    <Form>\n      <h1>Site</h1>\n      <div>\n        {touched.subject && errors.subject && <p>{errors.subject}</p>}\n        <Field type=\"text\" name=\"subject\" placeholder=\"Subject\" />\n      </div>\n      <div>\n        {touched.feedback && errors.feedback && <p>{errors.feedback}</p>}\n        <Field type=\"textarea\" name=\"feedback\" placeholder=\"Your submission...\" />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </Form>\n  )\n};\n\nconst WebsiteForm_Formik = withFormik({\n  mapPropsToValues() {\n    return {\n      subject: \"\",\n      feedback: \"\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    subject: Yup.string().required(),\n    feedback: Yup.string().required()\n  }),\n  handleSubmit(values) {\n    console.log(values);\n  },\n})(WebsiteForm);\n\nexport default WebsiteForm_Formik;\n","import React, { useState } from \"react\";\n\nconst StaffForm = () => {\n  const [fbType, setFbType] = useState('');\n  const [feedback, setFeedback] = useState('');\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setFbType('');\n    setFeedback('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Staff</h1>\n      <input\n        type=\"text\"\n        value={fbType}\n        onChange={e => setFbType(e.target.value)}\n        placeholder=\"type\"\n      />\n      <input\n        type=\"textarea\"\n        value={feedback}\n        onChange={e => setFeedback(e.target.value)}\n        placeholder=\"feedback\"\n      />\n    </form>\n  );\n};\n\nexport default StaffForm;\n","import React, { useState } from \"react\";\n\nconst EventForm = () => {\n  const [fbType, setFbType] = useState('');\n  const [feedback, setFeedback] = useState('');\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setFbType('');\n    setFeedback('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Event</h1>\n      <input\n        type=\"text\"\n        value={fbType}\n        onChange={e => setFbType(e.target.value)}\n        placeholder=\"type\"\n      />\n      <input\n        type=\"textarea\"\n        value={feedback}\n        onChange={e => setFeedback(e.target.value)}\n        placeholder=\"feedback\"\n      />\n    </form>\n  );\n};\n\nexport default EventForm;\n","import React, { useState } from \"react\";\n\nconst OtherForm = () => {\n  const [fbType, setFbType] = useState('');\n  const [feedback, setFeedback] = useState('');\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setFbType('');\n    setFeedback('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Other</h1>\n      <input\n        type=\"text\"\n        value={fbType}\n        onChange={e => setFbType(e.target.value)}\n        placeholder=\"type\"\n      />\n      <input\n        type=\"textarea\"\n        value={feedback}\n        onChange={e => setFeedback(e.target.value)}\n        placeholder=\"feedback\"\n      />\n    </form>\n  );\n};\n\nexport default OtherForm;\n","import React, { useEffect } from 'react';\n\nimport Container  from \"react-bootstrap/Container\";\nimport Row        from \"react-bootstrap/Row\";\nimport Col        from \"react-bootstrap/Col\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Nav  from \"react-bootstrap/Nav\";\nimport Tab  from \"react-bootstrap/Tab\";\n\nimport FeedbackFAQ from './Feedback/FeedbackFAQ';\n\nimport WebsiteForm  from \"./Feedback/Website\";\nimport StaffForm    from \"./Feedback/Staff\";\nimport EventForm    from \"./Feedback/Event\";\nimport OtherForm    from \"./Feedback/Other\";\n\nconst Feedback = () => {\n  useEffect(() => {\n    document.title = \"Feedback | Resident 51\";\n  });\n\n  return (\n  <Container fluid={true}>\n    <Row className=\"justify-content-md-center\">\n      <Col sm={12} md={4}>\n        <FeedbackFAQ />\n      </Col>\n      <Col sm={12} md={7}>\n        <h2>Provide Feedback</h2>\n        <Card>\n          <Tab.Container defaultActiveKey=\"website\">\n            <Card.Header>\n              <Nav justify variant=\"tabs\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"website\">Website</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"events\">Events</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"staff\">Staff</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"other\">Other</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Card.Header>\n            <Card.Body>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"website\">\n                  <WebsiteForm />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"events\">\n                  <EventForm />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"staff\">\n                  <StaffForm />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"other\">\n                  <OtherForm />\n                </Tab.Pane>\n              </Tab.Content>\n            </Card.Body>\n          </Tab.Container>\n        </Card>\n      </Col>\n    </Row>\n  </Container>\n)};\n\nexport default Feedback;\n","import React, { useContext, useEffect } from 'react'\n\nimport { UserContext } from \"../Contexts/User\";\n\nimport { useHistory } from 'react-router-dom';\n\nimport { ui, GoogleAuthProvider, FacebookAuthProvider } from '../Firebase/firebase';\nimport 'firebaseui/dist/firebaseui.css';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Login = () => {\n  const { user, userDispatch } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user && user.uid) {\n      return history.replace('/profile');\n    } else if(!user) {\n      return;\n    }\n\n    document.title = \"Log in | Resident 51\";\n\n    ui.start('#firebaseui-auth-container', {\n      callbacks: {\n        signInSuccessWithAuthResult: function (authResult) {\n          if (authResult.additionalUserInfo && authResult.additionalUserInfo.isNewUser) {\n            userDispatch({ type: \"NEW_USER\" });\n            history.push('/first-login');\n          } else {\n            history.push('/events');\n          }\n          return false;\n        },\n        // Not sure why this isn't successful? \n        // signInFailure: error => {\n        //   // TODO: handle errors gracefully\n        //   history.push('/login', { error });\n        //   return false;\n        // }\n      },\n      signInFlow: 'popup',\n      signInOptions: [\n        GoogleAuthProvider,\n        FacebookAuthProvider,\n      ],\n      tosUrl: () => history.push('/terms-of-service'),\n      privacyPolicyUrl: () => history.push('/privacy-policy'),\n    });\n  }, [user, history, userDispatch]);\n\n  if(user === null || user.uid) {\n    return <div />;\n  }\n\n  return (\n    <Container fluid={true}>\n      <Row>\n        <Col className=\"text-center\" xs={12}>\n          <h1>Log in to Resident 51:</h1>\n        </Col>\n        <Col xs={12}>\n          <div id=\"firebaseui-auth-container\"></div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;","import React from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport { FieldProps } from \"formik\";\n\nimport { FirstLoginFormValues } from '../FirstLoginForm';\n\nconst ResidentName = (props: FieldProps<FirstLoginFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n\n  return (\n    <>\n      <Form.Group controlId=\"residentName\">\n        <Form.Label>Display name:</Form.Label>\n        <Form.Control\n          name=\"name\"\n          required\n          type=\"text\"\n          maxLength={100}\n          onChange={field.onChange}\n          value={values.name}\n          placeholder=\"Display name\"\n        />\n        <Form.Text className=\"text-muted\">\n          We pulled this from the provider you used to sign in (Google or\n          Facebook), so if \"el1te_Un1c0rn_2004\" isn't as cool as you thought\n          it was, you can change it here to something your president will recognize.\n        </Form.Text>\n      </Form.Group>\n      {errors.name && touched.name && (\n        <Alert variant={\"danger\"}>{errors.name}</Alert>\n      )}\n    </>\n  )\n};\n\nexport default ResidentName;\n","import React, { useContext } from \"react\";\n\nimport { EventsContext } from \"../../../Contexts/Events\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport { FieldProps } from \"formik\";\n\nimport { FirstLoginFormValues } from '../FirstLoginForm';\n\nconst ResidentHall = (props: FieldProps<FirstLoginFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n  const { halls } = useContext(EventsContext);\n  \n  return (\n    <>\n      <Form.Group>\n        {/*as=\"legend\" was used here */}\n        <Form.Label>Choose your hall:</Form.Label>\n        <Row>\n          {halls.map(hall => (\n            <Col key={hall} sm={6} md={4}>\n              <Form.Check\n                name=\"hall\"\n                required\n                custom\n                type=\"radio\"\n                label={hall}\n                id={`resident-hall-${hall}`}\n                onChange={field.onChange}\n                value={hall}\n                checked={values.hall === hall}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Form.Group>\n      {errors.hall && touched.hall && (\n        <Alert variant={\"danger\"}>{errors.hall}</Alert>\n      )}\n    </>\n  )\n};\n\nexport default ResidentHall;\n","import React from \"react\";\n\nimport { FieldProps } from 'formik';\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { FirstLoginFormValues } from '../FirstLoginForm';\n\nconst ResidentEmail = (props: FieldProps<FirstLoginFormValues>) => {\n  const { form: { values, touched, errors }, field } = props;\n\n  return (\n    <>\n      <Form.Group controlId=\"residentEmail\">\n        <Form.Label>KU Email:</Form.Label>\n        <Form.Control\n          name=\"email\"\n          required\n          maxLength={100}\n          onChange={field.onChange}\n          value={values.email}\n          type=\"text\"\n          placeholder=\"a123b456@ku.edu or something...\"\n        />\n        <Form.Text className=\"text-muted\">\n          We only need this to verify you're a KU student. We'll send you a\n          verification link, then you're good to go.\n      </Form.Text>\n      </Form.Group>\n      {errors.email && touched.email && (\n        <Alert variant={\"danger\"}>{errors.email}</Alert>\n      )}\n    </>\n  )\n};\n\nexport default ResidentEmail;\n","import * as yup from 'yup';\nimport { Hall } from '../../../Types/';\n\nconst generateResidentValidationSchema = (halls: Hall[]) => yup.object().shape({\n  name: yup.string()\n    .min(4, \"Man, that's a short name!\")\n    .max(100, \"Lmao your parents must hate your ass huh\")\n    .required(\"Man, that's a short name!\"),\n  hall: yup.string()\n    .oneOf(halls, 'Please choose a valid hall.')\n    .required('You gotta choose a hall.'),\n  email: yup.string()\n    .required(\"Please?\")\n    .min(4, \"Please!\")\n    .email(\"Hey! That's no email!\")\n    .matches(/@ku\\.edu$/, 'Valid KU email please!')\n    .max(100, \"That's... a lot of email...\"),\n});\n\nexport default generateResidentValidationSchema;","import React, { useContext } from \"react\";\n\nimport { EventsContext } from \"../../Contexts/Events\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { Formik, FastField } from \"formik\";\n\nimport ResidentName from './FirstLoginForm/ResidentName';\nimport ResidentHall from './FirstLoginForm/ResidentHall';\nimport ResidentEmail from './FirstLoginForm/ResidentEmail';\n\nimport generateResidentValidationSchema from \"./FirstLoginForm/residentValidationSchema\";\n\nexport type FirstLoginFormValues = { email: string, hall: string, name: string };\n\ntype props = { name: string, onSubmit: (form: FirstLoginFormValues) => void };\nconst FirstLoginForm = (props: props) => {\n  const { name, onSubmit } = props;\n  const { halls } = useContext(EventsContext);\n\n  const formInitialValues = { name, hall: '', email: '' };\n\n  const validationSchema = generateResidentValidationSchema(halls);\n\n  return (\n    <Formik\n      initialValues={formInitialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <h3 className=\"pt-4 text-center\">Did we get your name right?</h3>\n          <FastField name=\"name\" component={ResidentName} />\n\n          <h3 className=\"pt-4 text-center\">What hall are you living in?</h3>\n          <FastField name=\"hall\" component={ResidentHall} />\n\n          <h3 className=\"pt-4 text-center\">What KU email can we reach you at?</h3>\n          <FastField name=\"email\" component={ResidentEmail} />\n\n          <Row className=\"justify-content-center pt-5\">\n            <Col xs={8}>\n              <Button block variant=\"primary\" size=\"lg\" type=\"submit\" disabled={isSubmitting}>\n                Request Verification\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default FirstLoginForm;","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { verificationRequest } from '../Types/';\n\nimport { UserContext } from '../Contexts/User';\n\nimport { useHistory } from 'react-router-dom';\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { requestVerification } from '../Firebase/firebase';\n\nimport FirstLoginForm from './Auth/FirstLoginForm';\n\nconst requestErrorAlert = (\n  <Col xs={12} md={8} className=\"justify-content-center my-3\">\n    <Alert variant=\"warning\">\n      There was an error with your request. It could be our fault, but more likely, it's entirely yours!\n    </Alert>\n  </Col>\n);\n\nconst FirstLogin = () => {\n  const { user } = useContext(UserContext);\n  const history = useHistory();\n  const [requestError, setRequestError] = useState(false);\n\n  useEffect(() => {\n    document.title = \"First Log-in | Resident 51\";\n\n    // Waiting for user info from Firebase Auth - wait.\n    if (user === null) return;\n\n    if (typeof user.permissions !== 'number') {\n      // No user logged in, direct to /login\n      history.replace('/login');\n    } else if (user.permissions !== 0) {\n      // User logged in, but already verified.\n      history.replace('/profile');\n    }\n  }, [history, user]);\n\n  const onSubmit = async (request: verificationRequest) => {\n    if (user && user.getIdToken) {\n      // Refresh user token, in case they are requesting verification\n      // immediately after signing in for the first time.\n      await user.getIdToken(true);\n\n      // request verification\n      const result = await requestVerification({\n        displayName: request.name,\n        kuEmail: request.email,\n        requestedHall: request.hall,\n      });\n\n      if (result.data) {\n        // Refresh user id token bc it's fucking free hell yeah.\n        await user.getIdToken(true);\n        history.push(\"/events\", { update: 'Successfully requested verification!' });\n      } else {\n        setRequestError(true);\n      }\n    }\n  }\n\n  const initialName = (user && user.displayName) ? user.displayName : '';\n\n  return user === null ? <div /> : (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xs={12} md={8} className=\"justify-content-center my-3\">\n          <h1 className=\"text-center\">Welcome!</h1>\n        </Col>\n        {requestError && requestErrorAlert}\n        <Col xs={12} md={8}>\n          <p className=\"lead\">\n            Before you can use the cool parts of Resident 51, you'll need\n            to be verified by an executive member of your hall. Fortunately,\n            that's the easy part: just fill out the form below and you're good\n            to go.\n          </p>\n        </Col>\n        <Col xs={12} md={8}>\n          <FirstLoginForm onSubmit={onSubmit} name={initialName} />\n        </Col>\n        {requestError && requestErrorAlert}\n      </Row>\n    </Container>\n  );\n};\n\nexport default FirstLogin;","import React, { useEffect } from 'react';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst PrivacyPolicy = () => {\n  useEffect(() => {\n    document.title = \"Privacy Policy | Resident 51\";\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col style={{ fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif', padding: '1em' }}>\n          <h2>Privacy Policy</h2>\n          <p>\n            Scholarship Hall Alumni built the Resident 51 app as\n            a Free app. This SERVICE is provided by\n            Scholarship Hall Alumni at no cost and is intended for\n            use as is.\n        </p>\n          <p>\n            This page is used to inform visitors regarding\n            my policies with the collection, use, and\n            disclosure of Personal Information if anyone decided to use\n            my Service.\n        </p>\n          <p>\n            If you choose to use my Service, then you agree\n            to the collection and use of information in relation to this\n            policy. The Personal Information that I collect is\n            used for providing and improving the Service.\n            I will not use or share your\n            information with anyone except as described in this Privacy\n            Policy.\n        </p>\n          <p>\n            The terms used in this Privacy Policy have the same meanings\n            as in our Terms and Conditions, which is accessible at\n            Resident 51 unless otherwise defined in this Privacy\n            Policy.\n        </p>\n\n          <p><strong>Information Collection and Use</strong></p>\n          <p>\n            For a better experience, while using our Service,\n            I may require you to provide us with certain\n            personally identifiable information. The\n            information that I request will be\n            retained on your device and is not collected by me in any way.\n        </p>\n          <p>\n            The app does use third party services that may collect\n            information used to identify you.\n        </p>\n\n          <p><strong>Log Data</strong></p>\n          <p>\n            I want to inform you that whenever\n            you use my Service, in a case of an error in the\n            app I collect data and information (through third\n            party products) on your phone called Log Data. This Log Data\n            may include information such as your device Internet\n            Protocol (“IP”) address, device name, operating system\n            version, the configuration of the app when utilizing\n            my Service, the time and date of your use of the\n            Service, and other statistics.\n        </p>\n\n          <p><strong>Cookies</strong></p>\n          <p>\n            Cookies are files with a small amount of data that are\n            commonly used as anonymous unique identifiers. These are\n            sent to your browser from the websites that you visit and\n            are stored on your device's internal memory.\n        </p>\n          <p>\n            This Service does not use these “cookies” explicitly.\n            However, the app may use third party code and libraries that\n            use “cookies” to collect information and improve their\n            services. You have the option to either accept or refuse\n            these cookies and know when a cookie is being sent to your\n            device. If you choose to refuse our cookies, you may not be\n            able to use some portions of this Service.\n        </p>\n\n          <p><strong>Service Providers</strong></p>\n          <p>\n            I may employ third-party companies\n            and individuals due to the following reasons:\n        </p>\n          <ul>\n            <li>To facilitate our Service;</li>\n            <li>To provide the Service on our behalf;</li>\n            <li>To perform Service-related services; or</li>\n            <li>To assist us in analyzing how our Service is used.</li>\n          </ul>\n          <p>\n            I want to inform users of this\n            Service that these third parties have access to your\n            Personal Information. The reason is to perform the tasks\n            assigned to them on our behalf. However, they are obligated\n            not to disclose or use the information for any other\n            purpose.\n        </p>\n\n          <p><strong>Security</strong></p>\n          <p>\n            I value your trust in providing us\n            your Personal Information, thus we are striving to use\n            commercially acceptable means of protecting it. But remember\n            that no method of transmission over the internet, or method\n            of electronic storage is 100% secure and reliable, and\n            I cannot guarantee its absolute security.\n        </p>\n\n          <p><strong>Links to Other Sites</strong></p>\n          <p>\n            This Service may contain links to other sites. If you click\n            on a third-party link, you will be directed to that site.\n            Note that these external sites are not operated by\n            me. Therefore, I strongly advise you to\n            review the Privacy Policy of these websites.\n            I have no control over and assume no\n            responsibility for the content, privacy policies, or\n            practices of any third-party sites or services.\n        </p>\n\n          <p><strong>Children’s Privacy</strong></p>\n          <p>\n            These Services do not address anyone under the age of 13.\n            I do not knowingly collect personally\n            identifiable information from children under 13. In the case\n            I discover that a child under 13 has provided\n            me with personal information,\n            I immediately delete this from our servers. If you\n            are a parent or guardian and you are aware that your child\n            has provided us with personal information, please contact\n            me so that I will be able to do\n            necessary actions.\n        </p>\n\n          <p><strong>Changes to This Privacy Policy</strong></p>\n          <p>\n            I may update our Privacy Policy from\n            time to time. Thus, you are advised to review this page\n            periodically for any changes. I will\n            notify you of any changes by posting the new Privacy Policy\n            on this page. These changes are effective immediately after\n            they are posted on this page.\n        </p>\n\n          <p><strong>Contact Us</strong></p>\n          <p>\n            If you have any questions or suggestions about\n            my Privacy Policy, do not hesitate to contact\n            me at berkyle@gmail.com.\n        </p>\n          <p>\n            This privacy policy page was created at <a href=\"https://privacypolicytemplate.net\" rel=\"noopener noreferrer\" target=\"_blank\">privacypolicytemplate.net</a> and modified/generated by <a href=\"https://app-privacy-policy-generator.firebaseapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">App Privacy Policy Generator</a>.\n        </p>\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nexport default PrivacyPolicy;","import React, { useEffect } from 'react';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst TermsOfService = () => {\n  useEffect(() => {\n    document.title = \"Terms of Service | Resident 51\";\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col style={{ fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif', padding: '1em' }}>\n          <h2>Terms &amp; Conditions</h2>\n          <p>\n            By downloading or using the app, these terms will\n            automatically apply to you – you should make sure therefore\n            that you read them carefully before using the app. You’re\n            not allowed to copy, or modify the app, any part of the app,\n            or our trademarks in any way. You’re not allowed to attempt\n            to extract the source code of the app, and you also\n            shouldn’t try to translate the app into other languages, or\n            make derivative versions. The app itself, and all the trade\n            marks, copyright, database rights and other intellectual\n            property rights related to it, still belong to\n            Scholarship Hall Alumni.\n        </p>\n          <p>\n            Scholarship Hall Alumni is committed to ensuring that the app\n            is as useful and efficient as possible. For that reason, we\n            reserve the right to make changes to the app or to charge\n            for its services, at any time and for any reason. We will\n            never charge you for the app or its services without making\n            it very clear to you exactly what you’re paying for.\n        </p>\n          <p>\n            The Resident 51 app stores and processes personal data\n            that you have provided to us, in order to provide\n            my Service. It’s your responsibility to keep your\n            phone and access to the app secure. We therefore recommend\n            that you do not jailbreak or root your phone, which is the\n            process of removing software restrictions and limitations\n            imposed by the official operating system of your device. It\n            could make your phone vulnerable to\n            malware/viruses/malicious programs, compromise your phone’s\n            security features and it could mean that the\n            Resident 51 app won’t work properly or at all.\n        </p>\n          <p>\n            You should be aware that there are certain things that\n            Scholarship Hall Alumni will not take responsibility for.\n            Certain functions of the app will require the app to have an\n            active internet connection. The connection can be Wi-Fi, or\n            provided by your mobile network provider, but\n            Scholarship Hall Alumni cannot take responsibility for the\n            app not working at full functionality if you don’t have\n            access to Wi-Fi, and you don’t have any of your data\n            allowance left.\n        </p>\n          <p>\n            If you’re using the app outside of an area with Wi-Fi, you\n            should remember that your terms of the agreement with your\n            mobile network provider will still apply. As a result, you\n            may be charged by your mobile provider for the cost of data\n            for the duration of the connection while accessing the app,\n            or other third party charges. In using the app, you’re\n            accepting responsibility for any such charges, including\n            roaming data charges if you use the app outside of your home\n            territory (i.e. region or country) without turning off data\n            roaming. If you are not the bill payer for the device on\n            which you’re using the app, please be aware that we assume\n            that you have received permission from the bill payer for\n            using the app.\n        </p>\n          <p>\n            Along the same lines, Scholarship Hall Alumni cannot always\n            take responsibility for the way you use the app i.e. You\n            need to make sure that your device stays charged – if it\n            runs out of battery and you can’t turn it on to avail the\n            Service, Scholarship Hall Alumni cannot accept\n            responsibility.\n        </p>\n          <p>\n            With respect to Scholarship Hall Alumni’s responsibility for\n            your use of the app, when you’re using the app, it’s\n            important to bear in mind that although we endeavour to\n            ensure that it is updated and correct at all times, we do\n            rely on third parties to provide information to us so that\n            we can make it available to you.\n            Scholarship Hall Alumni accepts no liability for any loss,\n            direct or indirect, you experience as a result of relying\n            wholly on this functionality of the app.\n        </p>\n          <p>\n            At some point, we may wish to update the app. The app is\n            currently available on Android &amp; iOS – the requirements for\n            both systems (and for any additional systems we\n            decide to extend the availability of the app to) may change,\n            and you’ll need to download the updates if you want to keep\n            using the app. Scholarship Hall Alumni does not promise that\n            it will always update the app so that it is relevant to you\n            and/or works with the Android &amp; iOS version that you have\n            installed on your device. However, you promise to always\n            accept updates to the application when offered to you, We\n            may also wish to stop providing the app, and may terminate\n            use of it at any time without giving notice of termination\n            to you. Unless we tell you otherwise, upon any termination,\n            (a) the rights and licenses granted to you in these terms\n            will end; (b) you must stop using the app, and (if needed)\n            delete it from your device.\n        </p>\n\n          <p><strong>Changes to This Terms and Conditions</strong></p>\n          <p>\n            I may update our Terms and Conditions\n            from time to time. Thus, you are advised to review this page\n            periodically for any changes. I will\n            notify you of any changes by posting the new Terms and\n            Conditions on this page. These changes are effective\n            immediately after they are posted on this page.\n        </p>\n\n          <p><strong>Contact Us</strong></p>\n          <p>\n            If you have any questions or suggestions about\n            my Terms and Conditions, do not hesitate to\n            contact me at berkyle@gmail.com.\n        </p>\n\n          <p>\n            This Terms and Conditions page was generated by <a href=\"https://app-privacy-policy-generator.firebaseapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">App Privacy Policy Generator</a>.\n        </p>\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nexport default TermsOfService;","import React, { useContext, useEffect } from 'react';\n\nimport { UserContext } from '../Contexts/User';\n\nimport { useHistory, Link } from 'react-router-dom';\n\nimport { verifyUser } from '../Firebase/firebase';\n\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport R51Card from \"./Layout/R51Card\";\n\nconst Profile = () => {\n  const { user, usersRequestingVerification } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"Profile | Resident 51\";\n    if (user && !user.displayName) {\n      history.replace('/login');\n    }\n  }, [user, history]);\n\n  // Return empty component while waiting for auth\n  if (!user) return <div />;\n\n  const { displayName, hall, permissions } = user;\n\n  const status = !permissions ? 'Unverified' :\n    permissions === 1 ? 'Resident' :\n      permissions === 2 ? 'Editor' :\n        permissions === 3 ? 'Admin' : 'User';\n\n  const verifyLink = <p><i>If you haven't already, <Link to=\"/first-login\">request verification</Link>.</i></p>\n  const optionalLink = !permissions ? verifyLink : <span />;\n\n  const sideHeader = (\n    <Container>\n      <Row>\n        <Col>\n          <h1>{displayName}</h1>\n          <h3>{!!hall ? hall : <i>No hall selected</i>}</h3>\n          <h3>{status}</h3>\n          {optionalLink}\n        </Col>\n      </Row>\n    </Container>\n  );\n\n  const verificationRequests = !!permissions && permissions >= 3 && (\n    <R51Card>\n      <R51Card.Header>Verification Requests</R51Card.Header>\n      <R51Card.Body>\n        {usersRequestingVerification.length ?\n        <ul>\n          {usersRequestingVerification.map(request => (\n            <li key={request.uid}>\n              <span className=\"lead\">{request.displayName}</span>\n              <Button onClick={() => verifyUser({ email: request.email })}>Verify</Button>\n            </li>\n          ))}\n        </ul> : 'No requests.'}\n      </R51Card.Body>\n    </R51Card>\n  );\n\n  return (\n    <Container fluid={!!user}>\n      {user === null ? <h1>Loading...</h1> :\n        <Row>\n          <Col xs={12} md={4}>\n            {sideHeader}\n          </Col>\n          <Col xs={12} md={7}>\n            <Container>\n              <h1>Your Dashboard</h1>\n            </Container>\n            {verificationRequests}\n            <R51Card>\n              <R51Card.Header>Event Drafts</R51Card.Header>\n              <R51Card.Body>wow</R51Card.Body>\n            </R51Card>\n            <R51Card>\n              <R51Card.Header>Favorited Events</R51Card.Header>\n              <R51Card.Body>great</R51Card.Body>\n            </R51Card>\n          </Col>\n        </Row>}\n    </Container>\n  )\n}\n\nexport default Profile;","import React, { useContext, useEffect } from 'react'\n\nimport { UserContext } from \"../Contexts/User\";\n\nimport { useHistory } from 'react-router-dom';\n\nconst Logout = () => {\n  const { user, userDispatch } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user && user.uid) {\n      userDispatch({ type: 'LOGOUT' })\n      history.push(\"/events\", { update: 'Logged out successfully.' });\n    } else if (user !== null) {\n      history.replace('/login');\n    }\n  }, [user, userDispatch, history]);\n\n  return <div />;\n}\n\nexport default Logout\n\n\n\n\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst NotFound = () => {\n  useEffect(() => {\n    document.title = \"404 | Resident 51\";\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"justify-contents-center\">\n          <h1>Error: Page not found!</h1>\n          <Link to=\"/\">Go Home</Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Events from \"./Events\";\nimport CreateEvent from './CreateEvent';\nimport EditEvent from './EditEvent';\nimport RemoveEvent from './RemoveEvent';\nimport Feedback from \"./Feedback\";\nimport LogIn from \"./Login\";\nimport FirstLogin from \"./FirstLogin\";\nimport PrivacyPolicy from './Policy/PrivacyPolicy'\nimport TermsOfService from './Policy/TermsOfService';\nimport Profile from './Profile'; // TS: a lot\nimport LogOut from \"./Logout\";\nimport NotFound from \"./NotFound\";\n\nconst Routes = () => (\n  <Switch>\n    <Route component={Home}           path=\"/\" exact />\n    <Route component={Events}         path=\"/events/\" exact />\n    <Route component={CreateEvent}    path=\"/events/create\" exact />\n    <Route component={EditEvent}      path=\"/events/edit/:id\" exact />\n    <Route component={RemoveEvent}    path=\"/events/delete/:id\" exact />\n    <Route component={Feedback}       path=\"/feedback/\" exact />\n    <Route component={LogIn}          path=\"/login/\" exact />\n    <Route component={FirstLogin}     path=\"/first-login/\" exact />\n    <Route component={LogOut}         path=\"/logout/\" exact />\n    <Route component={Profile}        path=\"/profile/\" exact />\n    <Route component={PrivacyPolicy}  path=\"/privacy-policy\" exact />\n    <Route component={TermsOfService} path=\"/terms-of-service\" exact />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Footer = () => (\n  <footer className=\"mt-5 py-2 px-md-4\" id=\"page_footer\">\n    <Container fluid>\n      <Row>\n        <Col xs=\"auto\">\n          <Link className=\"footer-link\" to='/privacy-policy'>Privacy</Link>\n        </Col>\n        <Col xs=\"auto\">\n          <Link className=\"footer-link\" to='/terms-of-service'>Terms</Link>\n        </Col>\n      </Row>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport Header from \"./Components/Layout/Header\";\nimport Routes from \"./Components/Routes\";\nimport Footer from \"./Components/Layout/Footer\";\n\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Styles/App.scss\";\n// import \"./Styles/R51-Title.scss\";\n\nimport { EventsProvider } from \"./Contexts/Events\";\nimport { UserProvider } from \"./Contexts/User\";\n\nconst App = () => (\n  <Router>\n    <div id=\"app_container\">\n      <Jumbotron id=\"r51\" className=\"mb-0\">\n        <h1 id=\"title\" className=\"display-1 text-center\">\n          R<span className=\"d-sm-inline d-none\">esident </span>51\n          </h1>\n      </Jumbotron>\n      <div id=\"everything-else\">\n        <UserProvider>\n          <Header />\n          <EventsProvider>\n            <Routes />\n          </EventsProvider>\n        </UserProvider>\n      </div>\n      <Footer />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}